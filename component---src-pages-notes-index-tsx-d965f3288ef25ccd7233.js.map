{"version":3,"file":"component---src-pages-notes-index-tsx-d965f3288ef25ccd7233.js","mappings":"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","sources":["webpack://gammawatt-website/./src/components/header.module.scss","webpack://gammawatt-website/./src/components/svg/Menu.tsx","webpack://gammawatt-website/./src/components/svg/Search.tsx","webpack://gammawatt-website/./src/components/svg/Home.tsx","webpack://gammawatt-website/./src/components/svg/Globe.tsx","webpack://gammawatt-website/./src/components/header.tsx","webpack://gammawatt-website/./src/components/svg/Close.tsx","webpack://gammawatt-website/./src/components/sidebar.tsx","webpack://gammawatt-website/./src/components/layout.tsx","webpack://gammawatt-website/./src/components/layout.module.scss","webpack://gammawatt-website/./src/pages/notes/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var navbar = \"header-module--navbar--Ij6sI\";\nexport var fixedTop = \"header-module--fixed-top--1uS5f\";\nexport var header = \"header-module--header--_rwsu\";\nexport var navbarMain = \"header-module--navbar-main--1E4Td\";\nexport var menu = \"header-module--menu--3pgt5\";\nexport var navLinks = \"header-module--navLinks--bJd3_\";\nexport var logoLink = \"header-module--logo-link--1h6AR\";\nexport var clicked = \"header-module--clicked--23fc0\";","import * as React from 'react';\n\nconst Icon = () => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className={['feather', 'feather-menu']}\n  >\n    <line\n      x1=\"3\"\n      y1=\"12\"\n      x2=\"21\"\n      y2=\"12\"\n    >\n    </line>\n    <line\n      x1=\"3\"\n      y1=\"6\"\n      x2=\"21\"\n      y2=\"6\"\n    >\n    </line>\n    <line\n      x1=\"3\"\n      y1=\"18\"\n      x2=\"21\"\n      y2=\"18\"\n    >\n    </line>\n  </svg>\n);\n\nexport default Icon;\n","import * as React from 'react';\n\nconst Icon = () => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className={['feather', 'feather-search']}\n  >\n    <circle\n      cx=\"11\"\n      cy=\"11\"\n      r=\"8\"\n    >\n    </circle>\n    <line\n      x1=\"21\"\n      y1=\"21\"\n      x2=\"16.65\"\n      y2=\"16.65\"\n    >\n    </line>\n  </svg>\n);\n\nexport default Icon;\n","import * as React from 'react';\n\nconst Icon = () => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className={['feather', 'feather-home']}\n  >\n    <path\n      d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"\n    >\n    </path>\n    <polyline\n      points=\"9 22 9 12 15 12 15 22\"\n    >\n    </polyline>\n  </svg>\n);\n\nexport default Icon;\n","import * as React from 'react';\n\nconst Icon = () => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className={['feather', 'feather-globe']}\n  >\n    <circle\n      cx=\"12\"\n      cy=\"12\"\n      r=\"10\"\n    >\n    </circle>\n    <line\n      x1=\"2\"\n      y1=\"12\"\n      x2=\"22\"\n      y2=\"12\"\n    >\n    </line>\n    <path\n      d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"\n    >\n    </path>\n  </svg>\n);\n\nexport default Icon;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport * as Styles from './header.module.scss'\n\nimport Menu from './svg/Menu';\nimport Search from './svg/Search';\nimport Home from './svg/Home';\nimport Globe from './svg/Globe';\n\ninterface HeaderProps {\n  siteTitle: string\n  toggleSidebar: () => {}\n  onClick?: any\n}\n\nconst Header = (props: HeaderProps) => {\n  const {\n    siteTitle,\n    toggleSidebar,\n    onClick\n  } = props\n\n  return (\n    <header \n      className={ Styles.header }\n      onClick={ onClick }\n    >\n      <div>\n        <div>\n          <nav className={Styles.navbarMain}>\n            <div className={Styles.menu} onClick={toggleSidebar}>\n              <Menu />\n            </div>\n            <div className={Styles.logoLink}>\n              <Link\n                to=\"/\"\n              >\n                {siteTitle}\n              </Link>\n            </div>\n            <div className={Styles.navLinks}>\n              <a>\n                <div>\n                  <Search />\n                </div>\n              </a>\n              <Link to='/'>\n                <div>\n                  <Home />\n                </div>\n              </Link>\n              <a>\n                <div>\n                  <Globe />\n                </div>\n              </a>\n              <Link to='/blog'>\n                <div>\n                  Blog\n                </div>\n              </Link>\n              <Link to='#contact'>\n                <div>\n                  Contact\n                </div>\n              </Link>\n              <Link to='/about'>\n                <div>\n                  About\n                </div>\n              </Link>\n            </div>\n          </nav>\n        </div>\n      </div>\n    </header>\n  )\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","import * as React from 'react';\n\nconst Icon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className={['feather', 'feather-x']}\n  >\n    <line\n      x1=\"18\"\n      y1=\"6\"\n      x2=\"6\"\n      y2=\"18\"\n    ></line>\n    <line\n      x1=\"6\"\n      y1=\"6\"\n      x2=\"18\"\n      y2=\"18\">\n    </line>\n  </svg>\n);\n\nexport default Icon;\n","import * as React from 'react'\n\nimport * as navbarStyles from './header.module.scss'\n\nimport Close from './svg/Close';\n\ninterface SidebarProps {\n  toggleOff: () => {}\n  children: React.ReactNode[]\n}\n\nconst Sidebar = (props: SidebarProps) => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        height: '100%',\n        width: props.collapsed ? '0' : '80%',\n        backgroundColor: 'hsla(35, 15%, 15%, 0.4)',\n        overflow: 'hidden',\n        transition: 'width .2s',\n        zIndex: 20\n      }}\n    >\n      <div className={navbarStyles.navbar}>\n        <div \n          className={navbarStyles.menu}\n          onClick={props.toggleOff}\n        >\n          <Close />\n        </div>\n      </div>\n      hi\n      dude\n    </div>\n  )\n}\n\nexport default Sidebar\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport 'normalize.css';\nimport './layout.scss';\nimport * as Styles from './layout.module.scss';\n\nimport Header from './header';\nimport Sidebar from './sidebar'\n\n\nconst context = React.createContext({\n  isSidebarVisible: false \n})\n\ninterface LayoutProps {\n  children: React.ReactNode\n}\n\nconst Layout = ({ children }: LayoutProps) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  const [sidebarState, setSidebarState] = React.useState(true)\n\n  const toggleSidebar = () => {setSidebarState(!sidebarState)}\n\n  const toggleSidebarIfOff = () => {\n    if (!sidebarState) {\n      setSidebarState(!sidebarState)\n    }\n  }\n\n  return (\n    <div className={ Styles.layout } >\n      <Sidebar\n        collapsed={sidebarState}\n        toggleOff={toggleSidebar}\n      />\n      <Header\n        siteTitle={data.site.siteMetadata?.title || 'Title'} \n        toggleSidebar={toggleSidebar}\n        onClick={toggleSidebarIfOff}\n      />\n      <div \n        className={ Styles.mainContainer }\n        onClick={toggleSidebarIfOff}\n      >\n        <main\n          style={{\n            margin: '0',\n            maxWidth: 960,\n            padding: '3rem 1.45rem 1.0875rem 1.45rem',\n          }}\n        >{children}</main>\n        <footer\n          className={ Styles.footer }\n          style={{\n            paddingTop: '2rem',\n            paddingBottom: '3rem'\n          }}\n        >\n          <div\n            style={{\n              margin: '0 auto',\n              maxWidth: 960,\n              padding: '3rem 1.45rem 1.0875rem 1.45rem',\n            }}\n          >\n            { \n              /*\n                 © {new Date().getFullYear()}, Built with\n                 {' '}\n                 <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n               */\n            }\n            <p>Links</p>\n            <p>Social media</p>\n            <hr />\n            <p style={{ textAlign: 'center' }}>Sitemap</p>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","// extracted by mini-css-extract-plugin\nexport var layout = \"layout-module--layout--Ws604\";\nexport var mainContainer = \"layout-module--mainContainer--37VX8\";\nexport var footer = \"layout-module--footer--35AoC\";","import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../../components/layout';\n\nconst Notes = () => {\n  return (\n    <Layout>\n      <div>\n        <ul>\n          <li>\n            <details>\n              <summary>Philosophies</summary>\n              <p>\n                <ul>\n                  <li>\n                    Usable is better than done, done is better than good, and \n                    good is better than perfect.\n                  </li>\n                </ul>\n              </p>\n            </details>\n          </li>\n          <li>\n            <details>\n              <summary>Design Philosophy</summary>\n              <p>\n                <ul>\n                  <li>\n                    An item must be useable in standalone execution \n                    as well as be usable as a module / API. \n                  </li>\n                  <li>\n                    Like what Microsoft appears to do. Anything done\n                    today will be wrong tomorrow.\n                    <ul>\n                      <li>\n                        We run every interaction via interfaces, \n                        traits, and generics, and pad those interfaces \n                        with 2 or 3 degrees of indirection. \n                        a -> b -> c -> d. Think: cat, grep, less, strings, USB, \n                        Wall outlets, HTTP, iprogramming language designs (and \n                        how keywords are defined and how you use them in the\n                        language), etc...\n                      </li>\n                      <li>\n                        Interfaces do not all need to be tightly defined \n                        from the outset. Reserved bytes and namespaces are\n                        created so we have plenty of options for filling in\n                        extra functions and endpoints later. This is how\n                        governments have handled managing and designating\n                        the limited radio frequency ranges.\n                      </li>\n                    </ul>\n                  </li>\n                  <li>\n                    Don't over-specify. Conditions on their own should be \n                    absolute; no redundancy nor repetition should be needed. A \n                    properly written answer for the fizz-buzz test would be a \n                    good example of this.\n                  </li>\n                  <li>\n                    An extremely telling sign of a well-defined module or \n                    function, is that it can be comfortably used in unforeseen \n                    ways, without changes, and still produce correct output and\n                    produce no errors, thereby deriving new functionality.\n                  </li>\n                  <li>\n                    Functions should not require many parameters. If many\n                    parameters are needed, or desired, a struct type or class\n                    instance containing those parameters should be used instead.\n                  </li>\n                  <li>\n                    Functions should tend towards being generically defined,\n                    rather than being too type-specific, unless the nature of\n                    the process requires that parameters match a specific type.\n                    But, regardless of implementation, a function's purpose\n                    and usage should still be clear from the function signature.\n                  </li>\n                  <li>\n                    Functions should not try to correct incorrect input and bad\n                    usage.\n                  </li>\n                  <li>\n                    Prefer interfaces and generics over strict types\n                  </li>\n                </ul>\n              </p>\n            </details>\n          </li>\n          <li>Setup guides and checklists</li>\n          <li>Troubleshooting</li>\n          <li>Computer Science topics, theory, and application</li>\n          <li>Cheatsheets</li>\n          <li>Design Patterns</li>\n          <li>Challenges and solutions</li>\n          <li>Style guides</li>\n          <li>Coding paradigms</li>\n          <li>List of tools and programming languages</li>\n        </ul>\n        <p>\n          <Link to=\"proglangs\">Programming Languages</Link>\n        </p>\n        <p>\n          <Link to=\"frameworks\">Frameworks</Link>\n        </p>\n        <p>\n          <Link to=\"cloud\">Cloud</Link>\n        </p>\n        <p>\n          <Link to=\"projects\">Projects</Link>\n        </p>\n        <p>\n          <h3>Current Primary Focus</h3>\n          <ul>\n            <li>Reactjs</li>\n            <li>TypeScript</li>\n            <li>DevOps</li>\n            <li>Nodejs</li>\n            <li>SQL</li>\n            <li>AWS</li>\n            <li>Golang</li>\n          </ul>\n          <h3>To Do, Because that's what the jobs are asking for</h3>\n          <ul>\n            <li>Agile, SCRUM, extreme programming (XP), TDD, BDD, unit testing, and others. Somehow give them examples of that experience.</li>\n            <li>AWS... for some reason, everybody uses AWS, and nothing else...</li>\n            <li>eCommerce Store</li>\n            <li>DevOps (Super important)</li>\n            <li>CI/CD</li>\n            <li>A/B testing</li>\n            <li>User Analytics</li>\n            <li>Memcached (caching)</li>\n            <li>Monitoring system performance</li>\n            <li>Designing for scale and massively scaling your applications</li>\n            <li>Kubernetes, cloud, docker, etc... for scaling applications</li>\n            <li>SDLC, from conception to architectually sound systems</li>\n            <li>Saelor</li>\n            <li>Android</li>\n            <li>Java</li>\n            <li>C# .NET</li>\n            <li>TypeScript</li>\n            <li>Software Architecting</li>\n            <li>Integration and integration testing</li>\n            <li>Node.js</li>\n            <li>Ruby on Rails</li>\n            <li>Golang</li>\n            <li>Shopify</li>\n            <li>Wordpress</li>\n          </ul>\n        </p>\n        <Link to=\"/\">To Homepage</Link>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Notes;\n"],"names":["menu","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","x1","y1","x2","y2","cx","cy","r","d","points","Header","props","siteTitle","toggleSidebar","onClick","Styles","Menu","Link","to","Search","Home","Globe","defaultProps","style","position","collapsed","backgroundColor","overflow","transition","zIndex","navbarStyles","toggleOff","Close","children","data","useStaticQuery","React","sidebarState","setSidebarState","toggleSidebarIfOff","site","siteMetadata","title","margin","maxWidth","padding","paddingTop","paddingBottom","textAlign"],"sourceRoot":""}