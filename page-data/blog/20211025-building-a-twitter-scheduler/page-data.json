{
    "componentChunkName": "component---src-pages-blog-mdx-slug-tsx",
    "path": "/blog/20211025-building-a-twitter-scheduler/",
    "result": {"data":{"mdx":{"id":"dd8bf6e9-ede3-5fe0-8dc6-d003a558390e","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Building a Twitter Post Scheduler\",\n  \"date\": \"2021-10-25T00:00:00.000Z\",\n  \"author\": \"GammaWatt\",\n  \"slug\": \"20211025-building-a-twitter-scheduler\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Title says it all. This should be a quickie.\\nBut you will require a valid phone number, either upon creating your account, or offering it up upon applying for a developer account, since that just how things are, now.\"), mdx(\"p\", null, \"The idea, here, is just to get something that'll fulfill the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Schedule posts to twitter\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Free / open source\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No SaaS provider or server required\")), mdx(\"p\", null, \"So, to do that, we'll take some shortcuts.\"), mdx(\"p\", null, \"Download \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"at\"), \". On Debian-based ditros, it's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo apt install -y at\"), \". Use your distro's corresponding package manager.\"), mdx(\"p\", null, \"Next, install tweepy. It's usually a good idea to do this in a virtual environment.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mkdir ./twitsched && cd ./twitsched\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"python -m venv env\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"source ./env/bin/activate\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"python -m pip install tweepy python-dotenv\"))), mdx(\"p\", null, \"I added \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"python-dotenv\"), \" because we'll need some token keys and such.\\nIt's generally bad practice to hardcode them into an app, and really\\nannoying to pass them into environment variables manually all the time.\"), mdx(\"p\", null, \"Log into Twitter, or make an account, go to\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.twitter.com/en/apply-for-access\"\n  }, \"https://developer.twitter.com/en/apply-for-access\"), \"\\nand apply for a developer account.\"), mdx(\"p\", null, \"They want statistics or something.... so tell them we're hobbyists making bots and  click whatever confirmation button shows up to continue.\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1,"frontmatter":{"title":"Building a Twitter Post Scheduler","date":"October 25, 2021","author":"GammaWatt"}}},"pageContext":{"id":"dd8bf6e9-ede3-5fe0-8dc6-d003a558390e","slug":"20211025-building-a-twitter-scheduler","__params":{"slug":"20211025-building-a-twitter-scheduler"}}},
    "staticQueryHashes": ["3649515864"]}